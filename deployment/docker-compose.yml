version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: forensics_db
    environment:
      POSTGRES_DB: forensics_db
      POSTGRES_USER: forensics_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ForensicsSecure2024!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./sample-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - forensics_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forensics_admin -d forensics_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: forensics_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - forensics_network
    command: redis-server --appendonly yes

  # Web Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: forensics_app
    ports:
      - "3000:3000"
      - "443:443"  # HTTPS
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://forensics_admin:${DB_PASSWORD:-ForensicsSecure2024!}@postgres:5432/forensics_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-change-this}
      UPLOAD_PATH: /app/uploads
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - ./ssl:/app/ssl  # SSL certificates
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - forensics_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: forensics_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - forensics_network

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: forensics_backup
    environment:
      PGPASSWORD: ${DB_PASSWORD:-ForensicsSecure2024!}
    volumes:
      - ./backups:/backups
      - ./backup-script.sh:/backup-script.sh
    command: >
      sh -c "
        chmod +x /backup-script.sh &&
        crond -f -d 8
      "
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - forensics_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  forensics_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16